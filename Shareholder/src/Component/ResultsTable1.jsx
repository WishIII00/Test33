import React from 'react';
import './ResultsTable.css';

const ResultsTable = ({ results }) => {
  const formatNumber = (num) => {
    return new Intl.NumberFormat('th-TH').format(num);
  };

  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (!results) {
    return null;
  }

  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô array ‡∏ß‡πà‡∏≤‡∏á
  if (Array.isArray(results) && results.length === 0) {
    return (
      <div className="empty-results">
        <div className="empty-icon">üîç</div>
        <div className="empty-text">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ñ‡∏∑‡∏≠‡∏´‡∏∏‡πâ‡∏ô‡∏Å‡∏π‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ</div>
      </div>
    );
  }

  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà array ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (!Array.isArray(results) || results.length === 0) {
    return (
      <div className="empty-results">
        <div className="empty-icon">üìã</div>
        <div className="empty-text">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á</div>
      </div>
    );
  }

  const totalAmount = results.reduce((total, result) => total + (result.shareAmount || 0), 0);

  return (
    <div className="results-container">
      {/* Info Message */}
      <div className="results-info">
        **‡∏ñ‡πâ‡∏≤ 1 ‡∏£‡∏∏‡πà‡∏ô‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 Record ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô record
      </div>
      
      {/* Results Count */}
      <div className="results-count">
        ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î <span className="count-number">{results.length}</span> ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
      </div>

      {/* Table Container */}
      <div className="table-container">
        <table className="results-table">
          <thead>
            <tr>
              <th>‡∏£‡∏∏‡πà‡∏ô</th>
              <th>‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</th>
              <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ñ‡∏∑‡∏≠‡∏´‡∏∏‡πâ‡∏ô</th>
              <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏∏‡πâ‡∏ô</th>
            </tr>
          </thead>
          <tbody>
            {results.map((result, index) => (
              <tr key={`${result.registrationNumber}-${index}`}>
                <td className="series-cell">
                  {result.series}
                </td>
                <td className="registration-cell">
                  {result.registrationNumber}
                </td>
                <td className="holder-name-cell">
                  {result.holderName}
                </td>
                <td className="share-amount-cell">
                  {formatNumber(result.shareAmount)}
                </td>
              </tr>
            ))}
          </tbody>
          
          {/* Table Footer with Summary */}
          {results.length > 1 && (
            <tfoot>
              <tr>
                <td colSpan="3" className="total-label">
                  ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                </td>
                <td className="total-amount">
                  {formatNumber(totalAmount)}
                </td>
              </tr>
            </tfoot>
          )}
        </table>
      </div>

      {/* Additional Info */}
      <div className="table-footer-info">
        <span className="info-icon">üí°</span>
        ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {results.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ 
        {results.length > 1 && ' (‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏£‡∏∏‡πà‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏Å‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏∑‡∏≠)'}
      </div>
    </div>
  );
};

export default ResultsTable;